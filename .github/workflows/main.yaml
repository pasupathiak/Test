name: Semantic Versioning and Release for Python

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  workflow_dispatch:  # Allow manual triggering of the workflow

permissions:
  contents: write  # Required for pushing tags and releases

jobs:
  semantic-versioning:
    name: Calculate Semantic Version and Tag
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Use the version compatible with your project

      - name: Install Dependencies
        run: pip install commitizen

      - name: Bump Version with Commitizen
        id: bump_version
        env:
          GITHUB_TOKEN: ${{ secrets.TEST_TOKEN }}  # Required for tagging
        run: |
          cz bump --yes --check-consistency
          NEW_TAG=$(cz bump --dry-run --stdout | tail -n 1)
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Push New Tag
        if: env.NEW_TAG != ''
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag ${{ v1.1.0 }}
          git push origin ${{ v1.2.1 }}

  build-and-push-docker:
    needs: semantic-versioning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TEST_TOKEN }}

      - name: Build Docker Image
        run: |
          IMAGE=ghcr.io/pasupathiak/test-python:${{ v1.2.1 }}
          docker build -t $IMAGE .

      - name: Push Docker Image
        run: |
          IMAGE=ghcr.io/pasupathiak/test-python:${{ 1.2.2 }}
          docker push $IMAGE

  release:
    needs: build-and-push-docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}
          body: |
            Auto-generated release for version ${{ env.NEW_TAG }}.
          draft: false
          prerelease: false
          token: ${{ secrets.TEST_TOKEN }}
