  name: Release the version tag
# Run on every commit tag which begins with "v" (e.g., "v0.1.4") 
   on: 
     push: 
       tags: 
     # Automatically create a GitHub Release, with release details specified (the relevant commits) 
  jobs: 
    release: 
      name: 
        "Release" 
         runs-on: "ubuntu-latest" 
     steps: 
    uses: "pasupathiak/action-automatic-releases@latest" 
   with: 
    repo_token: "${{ secrets.SIMPLE_TOKEN}}" 
  prerelease: 
  false

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git environment
        run: |
          git fetch --prune --unshallow --tags

      - name: Determine Version
        id: version
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          MAJOR=$(echo $LAST_TAG | cut -d '.' -f1 | sed 's/v//')
          MINOR=$(echo $LAST_TAG | cut -d '.' -f2)
          PATCH=$(echo $LAST_TAG | cut -d '.' -f3)
          
          PATCH=$((PATCH + 1))
          
          NEW_VERSION="v${MAJOR}.${MINOR}.${PATCH}"
          echo "New version: $NEW_VERSION"
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create Git Tag
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.SIMPLE_TOKEN }}

      - name: Build Docker image
        run: |
          IMAGE=ghcr.io/pasupathiak/xt_vox_python:${{ env.VERSION }}
          docker build -t $IMAGE .

      - name: Push Docker image
        run: |
          IMAGE=ghcr.io/pasupathiak/xt_vox_python:${{ env.VERSION }}
          docker push $IMAGE

  release:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            Changelog or release notes can go here.
          draft: false
          prerelease: false
          token: ${{ secrets.SIMPLE_TOKEN }}
