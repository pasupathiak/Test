name: Semantic Versioning and Release for Python

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Commitizen
        run: pip install commitizen

      - name: Bump version and generate changelog
        id: bump
        uses: commitizen-tools/commitizen-action@v1
        with:
          github_token: ${{ secrets.DEMO_TOKEN }}
          changelog_increment_filename: changelog.md

      - name: Push new tag
        if: steps.bump.outputs.version != ''
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ steps.bump.outputs.version }}
          git push origin ${{ steps.bump.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.DEMO_TOKEN }}

  build-and-publish:
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          IMAGE=ghcr.io/${{ test }}:${{ v0.1.0 }}
          docker build -t $IMAGE .
          docker push $IMAGE

  create-release:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          body_path: changelog.md
          tag_name: ${{ steps.bump.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.DEMO_TOKEN }}
